1. 运算符
    1) 三元运算符（三目运算符、条件运算符）
        表达式1 ? 表达式2 : 表达式3

    2) 逻辑运算符
        &&  逻辑与，两边为真，结果为真
        ||  逻辑或
        !   逻辑非

    3) 字符串拼接符
        +

    4) 赋值运算符
        =   先算右边，再赋值给左边
        +=  -=  *=  /=  %=

2. 流程控制的概念
    1) 什么是流程控制？
        流程控制就是控制程序执行的顺序

    2) 流程划分
        顺序流程：默认的流程，程序从上向下一句一句执行
        分支流程：根据条件判断，为真时执行一边，为假时执行另一边
        循环流程：条件满足时，不断执行某个语句块，直到条件不满足才结束

3. 条件分支语句if
    1) 单分支
        if(条件判断表达式){
            条件为真时执行的语句
        }

    2) 双分支
        if(条件判断表达式){
            条件为真时执行的语句
        }else{
            条件为假时执行
        }

    3) 多分支
        if(条件1){
            语句块1
        }else if(条件2){
            语句块2
        }else if(条件n){
            语句块n
        }else{
            条件全部为假时执行
        }

4. 状态分支语句switch
    switch(状态变量){
        case 值1:
            语句块1; break;
        case 值2:
            语句块2; break;
        case 值n:
            语句块n; break;
        default:
            所有都不满足时执行
    }

5. for循环
    for(条件初始化表达式; 条件判断表达式; 条件改变表达式){
        循环体;
    }

6. 其它循环语句
    //while循环
    while(条件判断表达式){
        循环体;
    }

    //do while循环
    do{
        循环体;
    }while(条件判断表达式);

    //死循环：循环条件永远为真，消耗大量的内存和CPU资源，可能会导致电脑变卡，甚至死机

    //双重循环：循环里面嵌套循环，外层循环执行1次，内层循环执行一轮
    for(let i=1; i<=5; i++){
        for(let j=1; j<=5; j++){
            ...
        }
    }

7. 循环控制语句
    break    跳出循环，结束循环
    continue 跳过当前循环，继续下一次循环