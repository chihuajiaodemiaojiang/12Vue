1. 函数【重点】
    1) 什么是函数？
        函数是对一段实现功能的代码进行的封装，函数不会自动运行，手动调用才会执行，可以重复调用

    2) 函数的定义
        //函数声明，必须要有名称
        function 函数名(){
            ...
        }

        //函数表达式，匿名函数
        let 变量名=function(){
            ...
        };

    3) 函数的调用
        函数名();

    4) 函数的参数
        a. 形式参数
            形式参数出现在函数定义的小括号内，用于接收传入的实际值
            function 函数名(形式参数1, 形式参数2, 形式参数n){
                ...
            }

        b. 实际参数
            实际参数出现在函数调用的小括号内，用于向函数内传递实际值
            函数名(实际参数1, 实际参数2, 实际参数n);

    5) 函数的返回值
        函数可以有返回值，return 实现，返回到函数的调用处
        function 函数名(){
            ...
            return 值;
        }

    6) 函数定义三部曲
        确定函数名：根据函数的功能整理出关键词，翻译后得到函数名
        确定函数的参数个数：根据函数的内部功能，是否需要外部数据参与，以及需要多少外部数据参与，确定参数个数
        确定返回值：根据函数运行的结果是不是需要在外部使用，需要就要返回值

        需求：定义一个函数获取三个数的最大值
        函数名：获取get 最大值max => getMax
        参数个数：3个参数
        返回值：返回最大值

        //建议：先写函数的调用，再写函数的定义
        console.log( getMax(5, 1, 2) ); //函数的调用

        function getMax(a, b, c){
            ???
            return ??;
        }

2. 函数的细节
    1) 参数的细节
        正常情况下，形式参数与实际参数一一对应赋值
        形式参数多于实际参数，多出来的形式参数接收不到值，默认值是undefined
        实际参数多于形式参数，多出来的实际参数无效

    2) 参数的默认值
        ES5: 利用短路运算实现参数的默认值
            a = a || 0;

        ES6: 使用ES6的语法格式实现默认值
            function 函数名(a=0, b=0){
                ...
            }

    3) 返回值的细节
        正常情况下，函数可以返回1个值，返回到调用处
        函数也可以没有返回值，默认会返回undefined
        函数遇到1个return 就结束了，后面代码不执行
        正常情况下，只能返回1个值，如果要返回多个值，可以使用数组或对象进行打包返回

3. 变量的作用域
    1) 什么是作用域？
        作用域就是指变量起作用的范围

    2) 作用域划分
        函数的封装特性将变量的作用域划分为：
            全局作用域：在函数外定义的变量就是全局变量，在任意地方使用
            局部作用域：在函数内定义的变量就是局部变量，只能在当前函数内使用

4. 系统函数
    1) 什么是系统函数？
        系统函数也称为内置函数，就是系统定义好的函数，只管用不管定义

    2) 常用的系统函数
        Number()    转数字
        String()
        Boolean()
        parseInt()
        parseFloat()

        isNaN()     判断是不是NaN，不是数字返回true，是数字就返回false